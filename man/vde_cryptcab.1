.TH VDE_CRYPTCAB 1 "December 6, 2006" "Virtual Distributed Ethernet"
.SH NAME
vde_cryptcab \- Virtual Distributed Ethernet encrypted cable manager
.SH SYNOPSIS
.B vde_cryptcab 
[ 
.B \-p   
.I portnum  
] 
[ 
.B \-s 
.I socketpath  
] 
[ 
.B \-c   
.I  [remote_user@]host[:remote_portnum]  
] 
[ 
.B \-P 
.I  pre_shared.key 
]|
[
.B \-x
] 
[
.B \-v
.I [v][v][v]
] 
[
.B \-k
]
[
.B \-d
]
.br
.SH DESCRIPTION
A
\fBvde_cryptcab\fP 
is a distributed cable manager for VDE switches.
It allows two VDE switches on two machines to communicate
using a ChaCha encrypted channel.

When used in client mode (i.e., with -c option), it generates a random
ChaCha key, and uses
.B scp (1)
to transfer the key to the remote server.

On the client side, the environment variable SCP_EXTRA_OPTIONS may be set in order 
to append options to the scp command line (this is useful for example when dropbear or
another non-standard ssh client is used to transfer the ChaCha key).

After a 4-way handshake phase to verify client credentials, server and 
client will exchange VDE datagrams encapsulating them into cryptograms
that are sent via udp to each remote host.

On server side, one could run: 
.RS
.br
.B vde_cryptcab -s /tmp/vde2.ctl -p 2100
.RE
To start a multi-peer cryptcab server, accepting udp datagrams on port
2100, that connects each authenticated remote client to a different 
port of the switch. In fact, a new instance of 
.B vde_plug (1)
is started and connected to the switch through local unix socket.

The command
.RS
.br
.B vde_cryptcab -s /tmp/vde2.ctl -c foo@remote.machine.org:2100
.RE
will connect a client to the remote server, running on udp port 2100.
At this point, on server side a verify for user "foo" credentials is required, 
typically it could be: host-based authentication, password challenge 
or public key authentication. See
.B ssh (1)
for more details about it.

If the two vde_switches run as daemon and they are connected to tap interfaces
a level 2 encrypted tunnel is established.

.SH OPTIONS
.TP
.B \-p "\fIportnum\fP" 
It is possible to decide which local udp port to use.
When this option is not specified, cryptcab will use default udp port number,
7667.
.TP
.B \-c "\fI[remote_user@]host[:remote_portnum]\fP" 
run vde_cryptcab in client mode, trying to connect to 
.B host .
Both 
.B remote_user 
and 
.B remote_portnum 
parameters are not required.
If not specified, the same user running vde_cryptcab is used for
authentication on server, and default udp port 7667 is used.
.TP
.B \-s "\fIsocketpath\fP"
specify the UNIX socket to be used by local programs for joining the VDE.
The default value is "/tmp/vde.ctl".
.TP
.B \-P "\fIpre_shared.keypath\fP"
if specified, vde_cryptcab will run in pre-shared key mode, instead of generating a
random key to transmit with ssh.
Given option is the path to the pre-shared symmetric key file to use for data encryption.
The same key has to be used on both client and server.
.TP
.B \-x
Disable symmetric key encryption.
.TP
.B \-k 
Send periodic "keepalive" packets to avoid server timeouts. Useful when you want to keep a low-traffic link available.
.TP
.B \-d 
Run as daemon.
.TP
.B \-v
Verbose. (Use -vv -vvv or -vvvv for more verbosity) 
.SH KNOWN ISSUES
Encapsulating IP packets into session+udp layer results in real datagrams larger
than tap device mtu. Since vde_cryptcab gets confused by packet fragmentation, the 
tap device mtu must be set to a smaller value than real interface mtu. Use 
.BR ip (8) 
or 
.BR ifconfig (8) 
to set up your tap device mtu.


Explicitly disabling encryption leads to obvious security problems. It is advised to avoid unencrypted mode (-x) in non-controlled networks.

.SH NOTICE
Virtual Distributed Ethernet is not related in any way with
www.vde.com ("Verband der Elektrotechnik, Elektronik und Informationstechnik"
i.e. the German "Association for Electrical, Electronic & Information
Technologies"). 

.SH SEE ALSO
\fBvde_switch\fP(1),
\fBvdeq\fP(1),
\fBvde_plug\fP(1),
\fBvde_plug2tap\fP(1),
\fBscp\fP(1),
\fBssh\fP(1).
.br
.SH AUTHORS 
VDE is a project by Renzo Davoli <renzo@cs.unibo.it>.

vde_cryptcab is a VDE component by Daniele Lacamera <root@danielinux.net>
